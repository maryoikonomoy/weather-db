/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package my.screen;
import database.Cities;
import database.Weather;
import java.awt.Image;
import java.text.SimpleDateFormat;
import weatherapp.DatabaseHandler;
import java.util.List;
import javax.swing.DefaultListModel;
import java.util.ArrayList;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

;

/**
 *
 * @author oikon
 */
public class thirdScreen extends javax.swing.JFrame {

    private DatabaseHandler dh;
    private DefaultListModel<String> cityListModel;
    private DefaultListModel<String> weatherListModel;
    private List<Cities> cities_list;
    private List<Weather> weather_list;
    private Cities selectedcity;
    private Boolean listenersenabled;
    
    private void setCityList(){
        cities_list = dh.getAllCities(); //city list from db
    }
    
    private void refreshCityList(){
        listenersenabled = false;
        // clear the city list
        cityListModel.clear();
        setCityList();
        // adds every city that was searched for to the list of cities
        for (Cities city : cities_list) {
            cityListModel.addElement(city.getName());
        }
        jList_cities.setModel(cityListModel);
        listenersenabled = true;
    }
    
    private void refreshWeatherList(Cities city){
        SimpleDateFormat sdf1 = new SimpleDateFormat("dd-MM-yyyy HH:mm");
        listenersenabled = false;
        clearWeather();
        weather_list.clear();
        // clear Weather list
        weatherListModel.clear();
        if(city!=null){
            // Adds every weather that was searched for to the list of cities
            for (Weather weather : city.getWeatherCollection()) {
                // Adds the date of the weather to the list model
                weatherListModel.addElement(sdf1.format(weather.getDate()));
                // Adds the weather data to the weather_list
                weather_list.add(weather);
            }
            // Sets the list model with weather data
            jList_weather.setModel(weatherListModel);
        }else{ // If no city is selected, displays a message
            weatherListModel.addElement("No selection");
            jList_weather.setModel(weatherListModel);
        }
        listenersenabled = true;
    }
    
    private void displayWeather(Weather weather) { //Sets weather textfields
        jTextField_tempc.setText(weather.getTempC());
        jTextField_humidity.setText(weather.getHumidity());
        jTextField_windspeed.setText(weather.getWindspeedkmph());
        jTextField_uvindex.setText(weather.getUvindex());
        jTextField_weather_desc.setText(weather.getWeatherdesc());
    }
    
    private void clearWeather() { //Clears weather textfields
        jTextField_tempc.setText("");
        jTextField_humidity.setText("");
        jTextField_windspeed.setText("");
        jTextField_uvindex.setText("");
        jTextField_weather_desc.setText("");
    }
    
    public thirdScreen() { //initialization
        this.selectedcity = null;
        this.weather_list = new ArrayList<>();
        this.cities_list = new ArrayList<>();
        this.weatherListModel = new DefaultListModel<>();
        this.cityListModel = new DefaultListModel<>();
        this.dh = new DatabaseHandler();
        initComponents();
        setBackgroundImage();
        
        //Disable text field editing
        jTextField_tempc.setEditable(false);
        jTextField_humidity.setEditable(false);
        jTextField_windspeed.setEditable(false);
        jTextField_uvindex.setEditable(false);
        jTextField_weather_desc.setEditable(false);
        
        refreshCityList();
        refreshWeatherList(selectedcity);
    }
    
    private void setBackgroundImage() {
    String localDir = System.getProperty("user.dir");
    
    String imagePath = localDir+"\\sky2.jpg"; //background image
    ImageIcon backgroundImage = new ImageIcon(imagePath);
    Image image = backgroundImage.getImage().getScaledInstance(getWidth(), getHeight(), Image.SCALE_SMOOTH);//fit 
    backgroundImage = new ImageIcon(image);
    JLabel backgroundLabel = new JLabel(backgroundImage);
    backgroundLabel.setBounds(0, 0, getWidth(), getHeight()); 

    // adds the background image to the contentPane of the window
    ((JPanel) getContentPane()).setOpaque(false);
    getLayeredPane().add(backgroundLabel, Integer.valueOf(Integer.MIN_VALUE));
    }

    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jList_cities = new javax.swing.JList<>();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jTextField_tempc = new javax.swing.JTextField();
        jTextField_humidity = new javax.swing.JTextField();
        jTextField_windspeed = new javax.swing.JTextField();
        jTextField_uvindex = new javax.swing.JTextField();
        jTextField_weather_desc = new javax.swing.JTextField();
        jButton_arxiki_othoni = new javax.swing.JButton();
        jButton_emfanisi_statistikwn = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jList_weather = new javax.swing.JList<>();
        jButton_diagrafi_polis = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jList_cities.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jList_cities.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jList_cities.setOpaque(false);
        jList_cities.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                jList_citiesValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(jList_cities);
        jList_cities.getAccessibleContext().setAccessibleParent(jList_cities);

        jLabel1.setText("Θερμοκρασία");

        jLabel2.setText("Υγρασία");

        jLabel3.setText("Ταχύτητα ανέμου");

        jLabel4.setText("Δείκτης UV");

        jLabel5.setText("Λεκτική πρόγνωση καιρού");

        jButton_arxiki_othoni.setText("Αρχική Οθόνη");
        jButton_arxiki_othoni.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_arxiki_othoniActionPerformed(evt);
            }
        });

        jButton_emfanisi_statistikwn.setText("Εμφάνιση στατιστικών");
        jButton_emfanisi_statistikwn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_emfanisi_statistikwnActionPerformed(evt);
            }
        });

        jList_weather.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                jList_weatherValueChanged(evt);
            }
        });
        jScrollPane2.setViewportView(jList_weather);

        jButton_diagrafi_polis.setText("Διαγραφή πόλης");
        jButton_diagrafi_polis.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_diagrafi_polisActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton_emfanisi_statistikwn)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jButton_arxiki_othoni, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jTextField_tempc, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField_humidity, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField_windspeed, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField_uvindex, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField_weather_desc, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jButton_diagrafi_polis, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton_arxiki_othoni)
                    .addComponent(jButton_emfanisi_statistikwn))
                .addGap(79, 79, 79)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(jTextField_tempc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(jTextField_humidity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(jTextField_windspeed, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(jTextField_uvindex, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(jTextField_weather_desc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 18, 18)
                .addComponent(jButton_diagrafi_polis)
                .addContainerGap(43, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    private void jButton_arxiki_othoniActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_arxiki_othoniActionPerformed
       //jumps to firstscreen
        screen myScreen = new screen();
        myScreen.setVisible(true);//visible
        dispose(); // closes current screen
    }//GEN-LAST:event_jButton_arxiki_othoniActionPerformed

    private void jButton_emfanisi_statistikwnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_emfanisi_statistikwnActionPerformed
        // jumps to fourthscreen
        fourthScreen myfourthScreen= new fourthScreen();
        myfourthScreen.setVisible(true);//visible
        dispose();//closes current screen
    }//GEN-LAST:event_jButton_emfanisi_statistikwnActionPerformed

    private void jButton_diagrafi_polisActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_diagrafi_polisActionPerformed
        // TODO add your handling code here: //deletes city from db
        if(selectedcity != null){
        int choice = JOptionPane.showConfirmDialog(null, "Eίστε σίγουρος ότι θέλετε να διαγράψετε την πόλη;", "Delete Confirmation", JOptionPane.YES_NO_OPTION);
        if (choice == JOptionPane.YES_OPTION) {
            dh.deleteCity(selectedcity);
            selectedcity = null;
            clearWeather();
            refreshCityList();
            refreshWeatherList(selectedcity);
        }
        }
    
    }//GEN-LAST:event_jButton_diagrafi_polisActionPerformed

    private void jList_citiesValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_jList_citiesValueChanged
        // TODO add your handling code here:
        if(listenersenabled){
            //  gets the selected city from the list
            selectedcity = cities_list.get(jList_cities.getSelectedIndex());
            // displays the search dates for the selected city
            refreshWeatherList(selectedcity);
        }
    }//GEN-LAST:event_jList_citiesValueChanged

    private void jList_weatherValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_jList_weatherValueChanged
        // TODO add your handling code here:
        if(listenersenabled){ //Executed when the selection changes in the list
            displayWeather(weather_list.get(jList_weather.getSelectedIndex())); //displays the weather data for the selected item
        }
    }//GEN-LAST:event_jList_weatherValueChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(thirdScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(thirdScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(thirdScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(thirdScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new thirdScreen().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton_arxiki_othoni;
    private javax.swing.JButton jButton_diagrafi_polis;
    private javax.swing.JButton jButton_emfanisi_statistikwn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JList<String> jList_cities;
    private javax.swing.JList<String> jList_weather;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField jTextField_humidity;
    private javax.swing.JTextField jTextField_tempc;
    private javax.swing.JTextField jTextField_uvindex;
    private javax.swing.JTextField jTextField_weather_desc;
    private javax.swing.JTextField jTextField_windspeed;
    // End of variables declaration//GEN-END:variables
}
